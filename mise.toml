[settings]
experimental=true

[env]
_.file = ".env"

[tools]
go = ["1.23", "1.24", "1.25"]
golangci-lint = "2.1.6"
goreleaser = "2.12.0"
watchexec = "latest"

# note: adding mise tasks here so we get "mise watch test -c" for free
[tasks.test]
run = "make test"

[tasks.lint]
run = "make lint"

[tasks.watch-test]
description = "Runs tests when files change"
run = "watchexec --exts go --watch . --restart --clear -- go test ./..."

[tasks.watch-test-cwd]
description = "Watch for changes in the current directory and run tests"
dir = "{{cwd}}"
run = "watchexec --exts go --watch . --restart --clear -- go test ./..."
alias = "wtc"

[tasks.verify-fmt]
silent=true
run = "golangci-lint fmt -d || (golangci-lint fmt && exit 1)"

[tasks.cover]
description = "Generate HTML coverage report for a specific path"
run = """
#!/usr/bin/env bash
set -euo pipefail

TEST_PATH="${1:-.}"
OUTPUT="${2:-coverage.html}"

# Normalize path - add ./ prefix if it doesn't start with . or /
if [[ ! "$TEST_PATH" =~ ^[./] ]]; then
    TEST_PATH="./$TEST_PATH"
fi

echo "Running tests with coverage for: $TEST_PATH"
mise exec -- go test "$TEST_PATH" -coverprofile=coverage.out
echo ""
echo "Coverage summary:"
mise exec -- go tool cover -func=coverage.out | tail -1
echo ""
echo "Generating HTML report: $OUTPUT"
mise exec -- go tool cover -html=coverage.out -o "$OUTPUT"
echo "Coverage report generated: $OUTPUT"
open "$OUTPUT"
"""

[hooks]
postinstall = "mise generate git-pre-commit --write --task=verify-fmt"
